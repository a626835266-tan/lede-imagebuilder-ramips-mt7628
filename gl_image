#!/usr/bin/env python

import sys
import json
import getopt
import logging
from subprocess import check_call

def usage(pname):
    print "GL.iNet tool"
    print "Usage: " + pname + " [OPTIONS]"
    print ""
    print " -t|--type           Image type"
    print " -f|--files          Files directory"
    print " -p|--packages       Install with package 'name' and remove with '-name'"
    
def main(argv):
    logging.basicConfig(format = '%(levelname)s: %(message)s')
    pname = argv[0]

    try:
        (opts, args) = getopt.getopt(argv[1:], 
                "ht:f:p:", 
                [ "help", "type=", "files=", "packages=" ])
    except getopt.GetoptError as e:
	usage(pname)
	return 1

    image_type = "standard"
    files_dir = None
    packages = ""
    files_dir = ""

    for (o, v) in opts:
        if o in ("-h", "--help"):
            usage(pname)
            return 0
        if o in ("-t", "--type"):
            image_type = v
        if o in ("-f", "--files"):
            files_dir = v
        if o in ("-p", "--packages"):
            packages = v

    filename = "images.json"

    try:
        with open(filename) as fd: 
            data = json.load(fd)
            fd.close()
    except:
        logging.error("Failed to parse %s, maybe missing file?" % filename)
        return 1

    if not data.has_key("version"):
        logging.error("No version specified in %s" % filename)
        return 1

    if not data.has_key("profiles"):
        logging.error("No profiles specified in %s" % filename)
        return 1

    if not data.has_key("types"):
        logging.error("No types specified in %s" % filename)
        return 1

    ver = data['version']
    profiles = data['profiles']

    if image_type not in data['types'].keys():
        logging.error("No found %s in %s" % (image_type, filename))
        return 1

    if packages is not None:
        packages = packages + " " + data['types'][image_type]
    else:
        packages = data['types'][image_type]

    for profile in profiles:
        extend_ipk = ""
        if data.has_key("extend") and data["extend"].has_key(profile):
            extend_ipk = data["extend"][profile]

        check_call("make image PROFILE=%s VERSION=%s PACKAGES=\"%s %s\" FILES=%s" % \
                (profile, ver, packages, extend_ipk, files_dir), shell=True);

if __name__ == "__main__":
    sys.exit(main(sys.argv))
